@model derrick_blog_app.Models.BlogPost
<!-- 'derrick_blog_app' is considered the 'namespace'-->
@{
    ViewBag.Title = "Details";
}




<!-- ##### Single Blog Area Start ##### -->
    <div class="single-blog-wrapper section-padding-0-100">

        <!-- Single Blog Area  -->
        <div class="single-blog-area blog-style-2 mb-50">
            <div class="single-blog-thumbnail">
                <!-- Image -->

                @if (Model.MediaUrl != null)
                {
                    <img class="img-responsive" src="@Model.MediaUrl" alt="" />
                }
                <div class="post-tag-content">
                    <div class="container">
                        <div class="row">
                            <div class="col-12">
                                <div class="post-date">
                                    <!-- Created Date -->
                                    <a href="#"> <span>@Model.Created.ToString("MM/dd/yyyy")</span></a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <div class="row">
                <!-- ##### Post Content Area ##### -->
                <div class="col-12 col-lg-9">
                    <!-- Single Blog Area  -->
                    <div class="single-blog-area blog-style-2 mb-50">
                        <!-- Blog Content -->
                        <div class="single-blog-content">
                            <div class="line"></div>
                            <!-- Title -->
                            <h4><a href="#" class="post-headline mb-0">@Model.Title</a></h4>
                            <div class="post-meta mb-50">
                                <!-- Author -->
                                <p>By Derrick Gordon</p>
                                

                            </div>

                            <!-- Catagory tag -->
                            <!-- Abstract -->
                            <p class="abstract-content"> @Model.Abstract</p>
                            <!-- Body -->
                            @Html.Raw(Model.Body)

                        </div>
                    </div>

                    <div class="post-a-comment-area mt-70">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <h5>Leave a reply</h5>
                            <!-- Reply Form -->
                            <!-- conditionally render form if user is logged in-->

                            @Html.BeginForm("Create", "Comments", FormMethod.Post)
                            @Html.AntiForgeryToken()
                            // Hidden tells HttpPost that the Id for this blog will be fed to "BlogPostId" property in the comment model -->
                            @Html.Hidden("BlogPostId", Model.Id)
                            //keeps slug for routing back to details view after post action completes
                            @Html.HiddenFor(model => model.Slug)
                            //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this may have to be lowercase: "slug" (dont forget to change it in controller too!!!
                            // text input area-->
                            <div class="row">

                                <div class="col-12">
                                    <div class="group">
                                        <input name="commentBody" placeholder="Write a comment..." />
                                    </div>
                                </div>
                                <div class="col-12">
                                    <button type="submit" class="btn original-btn">Comment</button>
                                </div>
                            </div>

                        }


                        <!-- Comment Area Start -->
                        <div class="comment_area clearfix mt-70">
                            <h5 class="title">Comments</h5>

                            <ol>
                                @foreach (var blogcomment in Model.Comments.OrderByDescending(c => c.Created))
                                {
                                    <!-- Single Comment Area -->
                                    <li class="single_comment_area">
                                        <!-- Comment Content -->
                                        <div class="comment-content d-flex">
                                            <!-- Comment Meta -->

                                            <div class="comment-meta">
                                                <p class="post-date">@blogcomment.Created.ToString("MM/dd/yyyy")</p>
                                                <p>@blogcomment.Author.Email</p>
                                                <p> @blogcomment.Body</p>
                                                <br />
                                                @if (User.IsInRole("Moderator"))
                                                {
                                                    @Html.ActionLink("Edit Comment", "Edit", "Comments", new { id = blogcomment.Id })
                                                    @Html.ActionLink("Delete", "Delete", "Comments", new { id = blogcomment.Id })
                                                }
                                                @if (User.IsInRole("Admin"))
                                                {
                                                    @Html.ActionLink("Edit Comment", "Edit", "Comments", new { id = blogcomment.Id })
                                                    @Html.ActionLink("Delete", "Delete", "Comments", new { id = blogcomment.Id })
                                                }
                                            </div>
                                        </div>
                                    </li>
                                }
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>